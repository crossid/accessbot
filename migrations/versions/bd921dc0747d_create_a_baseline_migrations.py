"""Create a baseline migrations

Revision ID: bd921dc0747d
Revises: 
Create Date: 2024-07-03 14:18:48.532485

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd921dc0747d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('slack_bots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.String(length=32), nullable=False),
    sa.Column('app_id', sa.String(length=32), nullable=False),
    sa.Column('enterprise_id', sa.String(length=32), nullable=True),
    sa.Column('enterprise_name', sa.String(length=200), nullable=True),
    sa.Column('team_id', sa.String(length=32), nullable=True),
    sa.Column('team_name', sa.String(length=200), nullable=True),
    sa.Column('bot_token', sa.String(length=200), nullable=True),
    sa.Column('bot_id', sa.String(length=32), nullable=True),
    sa.Column('bot_user_id', sa.String(length=32), nullable=True),
    sa.Column('bot_scopes', sa.String(length=1000), nullable=True),
    sa.Column('bot_refresh_token', sa.String(length=200), nullable=True),
    sa.Column('bot_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_enterprise_install', sa.Boolean(), nullable=False),
    sa.Column('installed_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('slack_bots_idx', 'slack_bots', ['client_id', 'enterprise_id', 'team_id', 'installed_at'], unique=False)
    op.create_table('slack_installations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.String(length=32), nullable=False),
    sa.Column('app_id', sa.String(length=32), nullable=False),
    sa.Column('enterprise_id', sa.String(length=32), nullable=True),
    sa.Column('enterprise_name', sa.String(length=200), nullable=True),
    sa.Column('enterprise_url', sa.String(length=200), nullable=True),
    sa.Column('team_id', sa.String(length=32), nullable=True),
    sa.Column('team_name', sa.String(length=200), nullable=True),
    sa.Column('bot_token', sa.String(length=200), nullable=True),
    sa.Column('bot_id', sa.String(length=32), nullable=True),
    sa.Column('bot_user_id', sa.String(length=32), nullable=True),
    sa.Column('bot_scopes', sa.String(length=1000), nullable=True),
    sa.Column('bot_refresh_token', sa.String(length=200), nullable=True),
    sa.Column('bot_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(length=32), nullable=False),
    sa.Column('user_token', sa.String(length=200), nullable=True),
    sa.Column('user_scopes', sa.String(length=1000), nullable=True),
    sa.Column('user_refresh_token', sa.String(length=200), nullable=True),
    sa.Column('user_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('incoming_webhook_url', sa.String(length=200), nullable=True),
    sa.Column('incoming_webhook_channel', sa.String(length=200), nullable=True),
    sa.Column('incoming_webhook_channel_id', sa.String(length=200), nullable=True),
    sa.Column('incoming_webhook_configuration_url', sa.String(length=200), nullable=True),
    sa.Column('is_enterprise_install', sa.Boolean(), nullable=False),
    sa.Column('token_type', sa.String(length=32), nullable=True),
    sa.Column('installed_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('slack_installations_idx', 'slack_installations', ['client_id', 'enterprise_id', 'team_id', 'user_id', 'installed_at'], unique=False)
    op.create_table('slack_oauth_states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state', sa.String(length=200), nullable=False),
    sa.Column('expire_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workspaces',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('unique_name', sa.String(length=32), nullable=False),
    sa.Column('display_name', sa.String(length=32), nullable=False),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('creating', 'active', 'error', name='workspacestatuses'), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_name')
    )
    op.create_table('applications',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('workspace_id', sa.String(length=10), nullable=False),
    sa.Column('unique_name', sa.String(), nullable=False),
    sa.Column('aliases', sa.JSON(), nullable=False),
    sa.Column('extra_instructions', sa.String(), nullable=True),
    sa.Column('provision_schema', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_ws_un', 'applications', ['workspace_id', 'unique_name'], unique=True)
    op.create_table('checkpoints',
    sa.Column('thread_id', sa.String(length=10), nullable=False),
    sa.Column('thread_ts', sa.TIMESTAMP(), nullable=False),
    sa.Column('parent_ts', sa.TIMESTAMP(), nullable=True),
    sa.Column('workspace_id', sa.String(length=10), nullable=False),
    sa.Column('checkpoint', sa.LargeBinary(), nullable=True),
    sa.Column('metadata', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('thread_id', 'thread_ts', 'workspace_id')
    )
    op.create_table('conversations',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('workspace_id', sa.String(length=10), nullable=False),
    sa.Column('assignee', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('recommendation', 'data_owner', name='conversationtypes'), nullable=False),
    sa.Column('status', sa.Enum('active', 'completed', 'cancelled', 'approved', 'denied', 'archived', name='conversationstatuses'), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('previous_conversation', sa.String(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('summary', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id', 'workspace_id')
    )
    op.create_index('idx_conv_status', 'conversations', ['status'], unique=False)
    op.create_table('directories',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('workspace_id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('provisioning_config', sa.JSON(), nullable=True),
    sa.Column('read_config', sa.JSON(), nullable=True),
    sa.Column('data_owner_config', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ws_name', 'directories', ['workspace_id', 'name'], unique=True)
    op.create_table('messages',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('workspace_id', sa.String(length=10), nullable=False),
    sa.Column('conversation_id', sa.String(length=10), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('content', sa.String(length=1024), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id', 'workspace_id')
    )
    op.create_table('rules',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('workspace_id', sa.String(length=10), nullable=False),
    sa.Column('when', sa.String(), nullable=False),
    sa.Column('then', sa.Enum('approve', 'deny', name='thentypes'), nullable=False),
    sa.Column('type', sa.Enum('auto_approve', name='ruletypes'), nullable=False),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rules_context',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('rule_id', sa.String(length=10), nullable=False),
    sa.Column('workspace_id', sa.String(length=10), nullable=False),
    sa.Column('directory_id', sa.String(length=10), nullable=True),
    sa.Column('application_id', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ),
    sa.ForeignKeyConstraint(['directory_id'], ['directories.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rules_context')
    op.drop_table('rules')
    op.drop_table('messages')
    op.drop_index('idx_ws_name', table_name='directories')
    op.drop_table('directories')
    op.drop_index('idx_conv_status', table_name='conversations')
    op.drop_table('conversations')
    op.drop_table('checkpoints')
    op.drop_index('ix_ws_un', table_name='applications')
    op.drop_table('applications')
    op.drop_table('workspaces')
    op.drop_table('slack_oauth_states')
    op.drop_index('slack_installations_idx', table_name='slack_installations')
    op.drop_table('slack_installations')
    op.drop_index('slack_bots_idx', table_name='slack_bots')
    op.drop_table('slack_bots')
    # ### end Alembic commands ###
